// <auto-generated />
using Clase7;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace tp4EF.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20211122221703_fix-datos1")]
    partial class fixdatos1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Slc_Mercado.Compra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("compras");
                });

            modelBuilder.Entity("tp1.Carro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("usuario_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("usuario_id")
                        .IsUnique();

                    b.ToTable("carro");

                    b.HasData(
                        new
                        {
                            id = 1,
                            usuario_id = 1
                        },
                        new
                        {
                            id = 2,
                            usuario_id = 2
                        });
                });

            modelBuilder.Entity("tp1.Categoria", b =>
                {
                    b.Property<int>("categoria_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoria_id");

                    b.ToTable("categorias");

                    b.HasData(
                        new
                        {
                            categoria_id = 1,
                            nombre = "electro"
                        },
                        new
                        {
                            categoria_id = 2,
                            nombre = "deco"
                        },
                        new
                        {
                            categoria_id = 3,
                            nombre = "varios"
                        });
                });

            modelBuilder.Entity("tp1.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_categoria")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("id_categoria");

                    b.ToTable("producto");

                    b.HasData(
                        new
                        {
                            id = 1,
                            cantidad = 200,
                            id_categoria = 1,
                            nombre = "tv",
                            precio = 100.0
                        },
                        new
                        {
                            id = 2,
                            cantidad = 300,
                            id_categoria = 3,
                            nombre = "radio",
                            precio = 150.0
                        },
                        new
                        {
                            id = 3,
                            cantidad = 200,
                            id_categoria = 2,
                            nombre = "silla",
                            precio = 100.0
                        });
                });

            modelBuilder.Entity("tp1.Producto_Carro", b =>
                {
                    b.Property<int>("id_Producto_Carro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("id_Carro")
                        .HasColumnType("int");

                    b.Property<int>("id_Producto")
                        .HasColumnType("int");

                    b.HasKey("id_Producto_Carro");

                    b.HasIndex("id_Carro");

                    b.HasIndex("id_Producto");

                    b.ToTable("producto_carro");
                });

            modelBuilder.Entity("tp1.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cuil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("dni")
                        .HasColumnType("int");

                    b.Property<int>("id_carro")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("usuarios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            apellido = "apellido",
                            cuil = "123",
                            dni = 123,
                            id_carro = 1,
                            mail = "mail",
                            nombre = "cliente",
                            password = "pass",
                            tipo = "cliente"
                        },
                        new
                        {
                            id = 2,
                            apellido = "apellido",
                            cuil = "423",
                            dni = 321,
                            id_carro = 2,
                            mail = "mail",
                            nombre = "admin",
                            password = "pass",
                            tipo = "admin"
                        });
                });

            modelBuilder.Entity("tp1.Usuario_Compra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("id_compra")
                        .HasColumnType("int");

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_compra");

                    b.HasIndex("id_usuario");

                    b.ToTable("usuario_compra");
                });

            modelBuilder.Entity("tp1.Carro", b =>
                {
                    b.HasOne("tp1.Usuario", "usuario")
                        .WithOne("Micarro")
                        .HasForeignKey("tp1.Carro", "usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("tp1.Producto", b =>
                {
                    b.HasOne("tp1.Categoria", "categoria")
                        .WithMany("productos")
                        .HasForeignKey("id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("tp1.Producto_Carro", b =>
                {
                    b.HasOne("tp1.Carro", "carro")
                        .WithMany("producto_Carro")
                        .HasForeignKey("id_Carro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tp1.Producto", "producto")
                        .WithMany("producto_carro")
                        .HasForeignKey("id_Producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("carro");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("tp1.Usuario_Compra", b =>
                {
                    b.HasOne("Slc_Mercado.Compra", "compra")
                        .WithMany("usuario_compra")
                        .HasForeignKey("id_compra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tp1.Usuario", "usuario")
                        .WithMany("usuario_compra")
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compra");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Slc_Mercado.Compra", b =>
                {
                    b.Navigation("usuario_compra");
                });

            modelBuilder.Entity("tp1.Carro", b =>
                {
                    b.Navigation("producto_Carro");
                });

            modelBuilder.Entity("tp1.Categoria", b =>
                {
                    b.Navigation("productos");
                });

            modelBuilder.Entity("tp1.Producto", b =>
                {
                    b.Navigation("producto_carro");
                });

            modelBuilder.Entity("tp1.Usuario", b =>
                {
                    b.Navigation("Micarro");

                    b.Navigation("usuario_compra");
                });
#pragma warning restore 612, 618
        }
    }
}
